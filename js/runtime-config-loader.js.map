{"version":3,"file":"runtime-config-loader.js","sourceRoot":"","sources":["../ts/runtime-config-loader.ts"],"names":[],"mappings":";;AAAA,+BAA4B;AAC5B,2BAA8C;AAE9C,MAAqB,mBAAmB;IACtC,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC;IACjD,CAAC;IAED,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC;IAClD,CAAC;IAED,IAAY,cAAc;QACxB,OAAO,WAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,wBAAwB,CAAC,CAAC;IACjE,CAAC;IAED,IAAY,aAAa;QACvB,IAAI,OAAO,GAA4B,EAAE,CAAC;QAC1C,IAAI,eAAU,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;YACnC,IAAI,YAAY,GAAG,iBAAY,CAAC,IAAI,CAAC,cAAc,EAAE;gBACnD,QAAQ,EAAE,MAAM;aACjB,CAAC,CAAC;YACH,IAAI;gBACF,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;aACpC;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACnB;SACF;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;AA3BD,sCA2BC","sourcesContent":["import { join } from 'path';\nimport { existsSync, readFileSync } from 'fs';\n\nexport default class RuntimeConfigLoader {\n  get skipWebpackOnRebuild() {\n    return this.configOptions.skipWebpackOnRebuild;\n  }\n\n  get skipAnalyzerOnRebuild() {\n    return this.configOptions.skipAnalyzerOnRebuild;\n  }\n\n  private get configFilename() {\n    return join(process.cwd(), 'config', 'ember-auto-import.json');\n  }\n\n  private get configOptions(): Record<string, boolean> {\n    let options: Record<string, boolean> = {};\n    if (existsSync(this.configFilename)) {\n      let fileContents = readFileSync(this.configFilename, {\n        encoding: 'utf8',\n      });\n      try {\n        options = JSON.parse(fileContents);\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n    return options;\n  }\n}\n"]}